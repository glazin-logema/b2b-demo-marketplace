env:
    NEW_RELIC_ENABLED: 0

sections:
    build:
        generate-transfers:
            command: 'vendor/bin/console transfer:generate'

        router-cache-warmup-yves:
            command: 'vendor/bin/yves router:cache:warm-up'

        router-cache-warmup-backoffice:
            command: 'vendor/bin/console router:cache:warm-up:backoffice'

        router-cache-warmup-backend-gateway:
            command: 'vendor/bin/console router:cache:warm-up:backend-gateway'

        router-cache-warmup-merchant-portal:
            command: 'vendor/bin/console router:cache:warm-up:merchant-portal'

        twig-cache-warmup:
            command: 'vendor/bin/console twig:cache:warmer'

        navigation-cache-warmup:
            command: 'vendor/bin/console navigation:build-cache'

        rest-request-validation-cache-warmup:
            command: 'vendor/bin/console rest-api:build-request-validation-cache'

        propel-copy-schema:
            command: 'vendor/bin/console propel:schema:copy'

        propel-build:
            command: 'vendor/bin/console propel:model:build'

        generate-entity-transfer:
            command: 'vendor/bin/console transfer:entity:generate'

        generate-page-source-map:
            command: 'vendor/bin/console search:setup:source-map'

        translator-generate-cache:
            command: 'vendor/bin/console translator:generate-cache'

        # app-store-suite
        app-store-suite-composer-dependencies:
            command: 'bash config/install/bin/app-store-suite.sh composer install -o'

        app-store-suite-build:
            command: 'bash config/install/bin/app-store-suite.sh vendor/bin/install -r docker -s build'

        # registry-service
        registry-service-composer-dependencies:
            command: 'bash config/install/bin/registry-service.sh composer install -o'

        registry-service-build:
            command: 'bash config/install/bin/registry-service.sh vendor/bin/install -r docker -s build'

    build-production:
        excluded: true
        cache-class-resolver-build:
            command: 'vendor/bin/console cache:class-resolver:build'

    build-development:
        generate-transfers:
            command: 'vendor/bin/console transfer:generate'

        generate-transfer-databuilders:
            command: 'vendor/bin/console transfer:databuilder:generate'

        generate-auto-completion:
            command: 'vendor/bin/console dev:ide-auto-completion:generate'

        rest-api-generate-documentation:
            command: 'vendor/bin/console rest-api:generate:documentation'

        # app-store-suite
        app-store-suite-build-development:
            command: 'bash config/install/bin/app-store-suite.sh vendor/bin/install -r docker -s build-development'

        # registry-service
        registry-service-build:
            command: 'bash config/install/bin/registry-service.sh vendor/bin/install -r docker -s build-development'

    build-static:
        merchant-portal-install-dependencies:
            command: 'console frontend:mp:install-dependencies | tail -100 && echo "Output trimmed, only last 100 lines shown."'

        zed-install-dependencies:
            command: 'vendor/bin/console frontend:zed:install-dependencies'

        dependencies-install:
            command: 'vendor/bin/console frontend:project:install-dependencies'

        yves-install-dependencies:
            command: 'vendor/bin/console frontend:yves:install-dependencies'

        # app-store-suite
        app-store-suite-build-static:
            command: 'bash config/install/bin/app-store-suite.sh vendor/bin/install -r docker -s build-static'

        # registry-service
        registry-service-build-static:
            command: 'bash config/install/bin/registry-service.sh vendor/bin/install -r docker -s build-static'
            timeout: 1200


    build-static-production:
        excluded: true
        yves-build-frontend:
            command: 'vendor/bin/console frontend:yves:build -e production'

        zed-build-frontend:
            command: 'vendor/bin/console frontend:zed:build -e production'

        merchant-portal-build-frontend:
            command: 'vendor/bin/console frontend:mp:build -e production'
            timeout: 1600

        # app-store-suite
        app-store-suite-build-static-development:
            command: 'bash config/install/bin/app-store-suite.sh vendor/bin/install -r docker -s build-static-development'

        # registry-service
        registry-service-build-static-development:
            command: 'bash config/install/bin/registry-service.sh vendor/bin/install -r docker -s build-static-development'

    build-static-development:
        yves-build-frontend:
            command: 'vendor/bin/console frontend:yves:build'

        zed-build-frontend:
            command: 'vendor/bin/console frontend:zed:build'

        merchant-portal-build-frontend:
            command: 'vendor/bin/console frontend:mp:build'
            timeout: 1600


    scheduler-setup:
        jenkins-setup:
            command: 'vendor/bin/console scheduler:setup'

        # app-store-suite
        app-store-suite-jenkins-setup:
            command: 'bash config/install/bin/app-store-suite.sh vendor/bin/install -r docker -s scheduler-setup'

    scheduler-suspend:
        excluded: true
        jenkins-suspend:
            command: 'vendor/bin/console scheduler:suspend'

    scheduler-clean:
        excluded: true
        jenkins-clean:
            command: 'vendor/bin/console scheduler:clean'

    init-storages-per-store:
        # app-store-suite | registry-service
        external-init-storages-per-store:
            command: 'bash config/install/bin/external-region-install.sh -r docker -s init-storages-per-store'

        queue-setup:
            command: 'bash config/install/bin/internal-region-console.sh queue:setup'
        setup-search-create-sources:
            command: 'bash config/install/bin/internal-region-console.sh search:setup:sources'

    init-storages-per-region:
        # It's only for AOP local development setup
        create-sqs-queues:
            command: 'bash config/install/bin/internal-region-console.sh message-broker:aws-sqs:create-queues'

        # It's only for AOP local development setup
        create-sns-topics:
            command: 'bash config/install/bin/internal-region-console.sh message-broker:aws-sns:create-topics'

        # It's only for AOP local development setup
        create-sns-subscriptions:
            command: 'bash config/install/bin/internal-region-console.sh message-broker:aws-sqs:subscribe-sqs-to-sns'

        # app-store-suite | registry-service
        external-init-storages-per-region:
            command: 'bash config/install/bin/external-region-install.sh -r docker -s init-storages-per-region'

        propel-copy-schema:
            command: 'bash config/install/bin/internal-region-console.sh propel:schema:copy'

        propel-postgres-compatibility:
            command: 'bash config/install/bin/internal-region-console.sh propel:pg-sql-compat'

        propel-migration-delete:
            command: 'bash config/install/bin/internal-region-console.sh propel:migration:delete'

        propel-tables-drop:
            command: 'bash config/install/bin/internal-region-console.sh propel:tables:drop'

        propel-diff:
            command: 'bash config/install/bin/internal-region-console.sh propel:diff'

        propel-migrate:
            command: 'bash config/install/bin/internal-region-console.sh propel:migrate'

        propel-migration-cleanup:
            command: 'bash config/install/bin/internal-region-console.sh propel:migration:delete'

        init-database:
            command: 'bash config/install/bin/internal-region-console.sh setup:init-db'

        # registry-service localstack section execution
        registry-service-localstack:
            command: 'bash config/install/bin/external-region-install.sh -r docker -s localstack'

        # This command currently works not properly at app-store-suite (It is not ready to work with current registry-service)
        # pbc-registration:
        #     command: 'bash config/install/bin/internal-region-console.sh pbc:app:registration'
    demodata:
        import-demodata:
            command: 'bash config/install/bin/internal-region-console.sh data:import --config=data/import/local/full_${SPRYKER_REGION}.yml'

        update-product-labels:
            command: 'bash config/install/bin/internal-region-console.sh product-label:relations:update'

        # app-store-suite | registry-service
        external-demodata:
            command: 'bash config/install/bin/external-region-install.sh -r docker -s demodata'
